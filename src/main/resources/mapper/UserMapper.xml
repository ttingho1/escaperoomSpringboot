<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.escaperoom.mapper.UserMapper">	<!-- mapper 인터페이스가 위치하는 경로 -->

    <!-- 모든 회원정보 출력 -->
    <select id="getUserList" resultType="com.example.escaperoom.vo.UserVo">	<!-- id: mapper 인터페이스에서 선언한 메서드 이름과 같아야 한다. resultType: VO 클래스가 위치하는 경로 -->
        SELECT * FROM member;
    </select>

    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="com.example.escaperoom.vo.UserVo">
        INSERT INTO member
            (email, password, pwconfirm, name, phone1, phone2, phone3)
        VALUES
            (#{email}, #{password}, #{pwconfirm}, #{name}, #{phone1}, #{phone2}, #{phone3})
    </insert>

    <!-- 로그인 -->
    <select id="getUserForLogin" parameterType="hashMap" resultType="com.example.escaperoom.vo.UserVo">
        SELECT * FROM member WHERE email = #{email} AND password = #{password}
    </select>

    <!-- 마이페이지 - 이메일로 회원정보 가져오기 -->
    <select id="getUserByEmail" resultType="com.example.escaperoom.vo.UserVo">
        SELECT * FROM member WHERE email = #{email}
    </select>

    <!-- 회원정보 수정  -->
    <update id="updateUser" parameterType="com.example.escaperoom.vo.UserVo">
        UPDATE member
        SET
            password = ${password},
            pwconfirm = ${pwconfirm},
            phone1 = ${phone1},
            phone2 = ${phone2},
            phone3 = ${phone3}
        WHERE
            email = #{email}
    </update>

    <!-- 회원 탈퇴 -->
    <delete id="deleteUser">
        DELETE FROM MEMBER WHERE email = #{email}
    </delete>




</mapper>